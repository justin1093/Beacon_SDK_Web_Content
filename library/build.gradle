apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7

    }

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 25
        consumerProguardFiles 'consumer-proguard-rules.pro'
    }

    lintOptions {
        lintConfig file("config/quality/lint/lint.xml")
    }

    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

}

dependencies {
    compile 'org.altbeacon:android-beacon-library:2.9.2'
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile "com.android.support:support-v4:25.0.1"

    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-jackson:2.1.0'

    compile 'com.squareup.okhttp3:okhttp:3.5.0'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.5.0'
    compile 'commons-codec:commons-codec:1.10'
}

//static code analysis
apply plugin: 'pmd'
apply plugin: 'findbugs'

task pathingJar(type: Jar) {
    appendix = "pathing"
    doFirst {
        manifest {
            attributes "Class-Path": project.configurations.compile.files.join(" ")
        }
    }
}

task pmd(type: Pmd) {
    ignoreFailures = true
    ruleSetFiles = files('config/quality/pmd/pmd-rules.xml')
    source = fileTree('src/main/java/')
}

task findbugs(type: FindBugs, dependsOn: ['pathingJar', 'assembleDebug']) {
    excludeFilter file('config/quality/findbugs/findbugs-filter.xml')
    classes = fileTree('build/intermediates/classes/_fix_this_path_/debug/')
    source = fileTree('src/main/java/')
    classpath = files(pathingJar.archivePath)
    effort = 'max'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task quickCheck() {
    group = 'verification'
}

task copyServer(type: Copy) {
    group = 'ds_copy'
    String serviceRootDir = "'C:/Technology/backup/CM/Bcon360_Android_SDK/library/build/outputs/aar'"
    String serviceDestDir = "C:/Technology/backup/CM/BeaconDemov/app/libs"

    from serviceRootDir
    into serviceDestDir


    doLast {
        println "Finished copying service classes for $dsName"
    }
}


//todo - fix task name
quickCheck.dependsOn 'lintDevLogcatlogsDebug', 'pmd', 'findbugs'
copyServer
apply from: rootProject.file('gradle/gradle-mvn-push.gradle')